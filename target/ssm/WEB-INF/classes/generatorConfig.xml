<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--导入数据库配置信息-->
    <properties resource="db.properties" />

    <!--指定特定数据库的jdbc驱动jar包的位置-->
    <classPathEntry location="/home/zhengtianle/workspace/maven-repository/mysql/mysql-connector-java/8.0.13/mysql-connector-java-8.0.13.jar"/>

    <!--选择运行的mybatis版本-->
    <context id="default" targetRuntime="MyBatis3">
        <!--optional 设置没有默认注释，如果需要自定义注释，可以百度相关资料-->
        <commentGenerator>
            <property name="suppressDate" value="true" />
            <property name="suppressAllComments" value="true" />
        </commentGenerator>

        <!--jdbc数据库连接-->
        <jdbcConnection
                driverClass="${jdbc.driver}"
                connectionURL="${jdbc.url}"
                userId="${jdbc.username}"
                password="${jdbc.password}">
        </jdbcConnection>

        <!-- 配置数据库字段类型为DECIMAL 和 NUMERIC 是否强制解析成BigDecimal,可以不配置默认为false-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>

        <!--Model模型生成器，用来生成含有主键key的类
        记录类以及查询Example类
        targetPackage：指定生成的model生成所在的包名
        targetProject：指定在该项目下所在的路径-->
        <javaModelGenerator targetPackage="pojo" targetProject="./src/main/java">
            <!--是否允许子包，即targetPackage.schemaName.tableName-->
            <property name="enableSubPackages" value="false" />
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立的Model对象是否不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!--设置生成mapper.xml映射文件所在的目录&为每一个数据库的表生成对应的sqlMap文件-->
        <sqlMapGenerator targetPackage="mapperXml" targetProject="./src/main/resources">
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>

        <!--客户端代码，生成易于使用的针对Model对象和XML配置文件的代码
        type="ANNOTATEDMAPPER"：生成Java Model 和基于注解的Mapper对象
        type="MIXEDMAPPER"：生成基于注解的Java Model 和相应的Mapper对象
        type="XMLMAPPER"：生成SQLMap XML文件和独立的Mapper接口-->
        <!--生成mapper的包名和位置-->
        <javaClientGenerator type="ANNOTATEDMAPPER" targetPackage="dao.mapper" targetProject="./src/main/java">
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>

        <!--mybatis generator代码生成器在默认的情况下会生成对于表实体类的一个Examle类,这里设置成false不生成Example-->
        <table tableName="user"
               domainObjectName="User"
               enableCountByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false"
               enableUpdateByExample="false">

            <!--忽略列，不生成bean 字段
            <ignoreColumn column="FRED" />-->
            <!-- 指定列的java数据类型
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />-->
        </table>
        <table tableName="star_message"
               domainObjectName="StarMessage"
               enableCountByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false"
               enableUpdateByExample="false">

        </table>
        <table tableName="message"
               domainObjectName="Message"
               enableCountByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false"
               enableUpdateByExample="false">

        </table>

    </context>
</generatorConfiguration>